//
// Generated file, do not edit! Created by nedtool 5.6 from IP_msg.msg.
//

#ifndef __IP_MSG_M_H
#define __IP_MSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>IP_msg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message IP_msg extends cPacket
 * {
 *     int version = 0;
 *     int length = 20;
 *     int tos = 0;
 *     int size = 20;
 *     int Id = 0;
 *     int flags = 1;
 *     int offset = 0;
 *     int ttl = 2;
 *     int protocol = 0;
 *     int checksum = 0;
 *     string ip_src;
 *     string ip_dest;
 * }
 * </pre>
 */
class IP_msg : public ::omnetpp::cPacket
{
  protected:
    int version;
    int length;
    int tos;
    int size;
    int Id;
    int flags;
    int offset;
    int ttl;
    int protocol;
    int checksum;
    ::omnetpp::opp_string ip_src;
    ::omnetpp::opp_string ip_dest;

  private:
    void copy(const IP_msg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IP_msg&);

  public:
    IP_msg(const char *name=nullptr, short kind=0);
    IP_msg(const IP_msg& other);
    virtual ~IP_msg();
    IP_msg& operator=(const IP_msg& other);
    virtual IP_msg *dup() const override {return new IP_msg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getVersion() const;
    virtual void setVersion(int version);
    virtual int getLength() const;
    virtual void setLength(int length);
    virtual int getTos() const;
    virtual void setTos(int tos);
    virtual int getSize() const;
    virtual void setSize(int size);
    virtual int getId() const;
    virtual void setId(int Id);
    virtual int getFlags() const;
    virtual void setFlags(int flags);
    virtual int getOffset() const;
    virtual void setOffset(int offset);
    virtual int getTtl() const;
    virtual void setTtl(int ttl);
    virtual int getProtocol() const;
    virtual void setProtocol(int protocol);
    virtual int getChecksum() const;
    virtual void setChecksum(int checksum);
    virtual const char * getIp_src() const;
    virtual void setIp_src(const char * ip_src);
    virtual const char * getIp_dest() const;
    virtual void setIp_dest(const char * ip_dest);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IP_msg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IP_msg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __IP_MSG_M_H

