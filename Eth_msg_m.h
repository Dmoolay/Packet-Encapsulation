//
// Generated file, do not edit! Created by nedtool 5.6 from Eth_msg.msg.
//

#ifndef __ETH_MSG_M_H
#define __ETH_MSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Eth_msg.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message Eth_msg extends cPacket
 * {
 *     string mac_src;
 *     string mac_dest;
 *     int type;  //1=ARP-request| 2=ARP-reply| 3=Data
 * }
 * </pre>
 */
class Eth_msg : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string mac_src;
    ::omnetpp::opp_string mac_dest;
    int type;

  private:
    void copy(const Eth_msg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Eth_msg&);

  public:
    Eth_msg(const char *name=nullptr, short kind=0);
    Eth_msg(const Eth_msg& other);
    virtual ~Eth_msg();
    Eth_msg& operator=(const Eth_msg& other);
    virtual Eth_msg *dup() const override {return new Eth_msg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getMac_src() const;
    virtual void setMac_src(const char * mac_src);
    virtual const char * getMac_dest() const;
    virtual void setMac_dest(const char * mac_dest);
    virtual int getType() const;
    virtual void setType(int type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Eth_msg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Eth_msg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ETH_MSG_M_H

